<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.apache.dolphinscheduler.dao.mapper.DependComplementMapper">

    <sql id="baseSql">
        id, project_code, start_process_definition_code, start_process_definition_name, schedule_start_date, schedule_end_date,
        command_type, depend_complement_process_json, depend_complement_param,
        executor_id, state, failure_strategy, worker_group, environment_code, warning_type,
        warning_group_id, create_time, update_time
    </sql>
    <sql id="baseSqlV2">
        project_code, start_process_definition_code, start_process_definition_name, schedule_start_date, schedule_end_date,
        command_type, depend_complement_process_json, depend_complement_param,
        executor_id, state, failure_strategy, worker_group, environment_code, warning_type,
        warning_group_id
    </sql>

    <select id="queryDetailById" resultType="org.apache.dolphinscheduler.dao.entity.DependComplement">
        select *
        from
        t_ds_depend_complement
        where active = 1 and id = #{dependComplementId}
    </select>

    <select id="queryDependComplementListPaging" resultType="org.apache.dolphinscheduler.dao.entity.DependComplement">
        SELECT td.id, td.project_code, td.start_process_definition_code, td.start_process_definition_name, td.schedule_start_date, td.schedule_end_date,
        td.command_type, td.depend_complement_process_json, td.depend_complement_param,
        td.executor_id, td.state, td.failure_strategy, td.worker_group, td.environment_code, td.warning_type,
        td.warning_group_id, td.create_time, td.update_time, tu.user_name
        FROM t_ds_depend_complement td
        left join t_ds_user tu on td.executor_id = tu.id
        where td.active = 1 and td.project_code = #{projectCode}
        <if test=" searchVal != null and searchVal != ''">
            AND td.depend_complement_process_json like concat('%', #{searchVal}, '%')
        </if>
        <if test=" userId != 0">
            and td.executor_id = #{userId}
        </if>
        order by td.id desc
    </select>

    <insert id="insertAndReturnId" parameterType="org.apache.dolphinscheduler.dao.entity.DependComplement" useGeneratedKeys="true" keyProperty="id">
        insert into t_ds_depend_complement(<include refid="baseSqlV2"/>)
        values (#{dependComplement.projectCode}, #{dependComplement.startProcessDefinitionCode}, #{dependComplement.startProcessDefinitionName},
                #{dependComplement.scheduleStartDate}, #{dependComplement.scheduleEndDate}, #{dependComplement.commandType},
                #{dependComplement.dependComplementProcessJson}, #{dependComplement.dependComplementParam},
                #{dependComplement.executorId}, #{dependComplement.state},
                #{dependComplement.failureStrategy}, #{dependComplement.workerGroup}, #{dependComplement.environmentCode},
                #{dependComplement.warningType}, #{dependComplement.warningGroupId})
    </insert>

    <select id="queryDependComplementWithState" resultType="org.apache.dolphinscheduler.dao.entity.DependComplement">
        select
        *
        from t_ds_depend_complement
        where active = 1
        <if test="states != null and states.length != 0">
            and state in
            <foreach collection="states" index="index" item="i" open="(" separator="," close=")">
                #{i}
            </foreach>
        </if>
        order by id asc
        limit #{limit} offset #{offset}
    </select>
    <select id="queryNonfinalStateDependComplement" resultType="org.apache.dolphinscheduler.dao.entity.DependComplement">
        select
        *
        from t_ds_depend_complement
        where active = 1
        <if test="states != null and states.length != 0">
            and state in
            <foreach collection="states" index="index" item="i" open="(" separator="," close=")">
                #{i}
            </foreach>
        </if>
    </select>

    <update id="updateStateById">
        update t_ds_depend_complement
        set state = #{state}
        where id = #{dependComplementId}
    </update>

</mapper>
